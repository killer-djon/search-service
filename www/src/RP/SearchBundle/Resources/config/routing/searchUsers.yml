# Routing который формирует запрос для поиска пользователя
# по имени/фамилии пользователя (начало/середина имени/фамилии)
# пример запроса /api/search/v2/json/users/name
RPSearchBundle_search_users_byname:
    path: /v{_version}/{_format}/users/name
    defaults:
        _controller: RPSearchBundle:SearchUsers:searchUsersByName
        _version: 1
        _format: json
        template: "RPSearchBundle:SearchUsers:searchusers.html.twig" # обязательный параметр при передаче в формате HTML (frontend parts API)
    requirements:
        _method: (GET)
        _format: (json|xml|html|plist)
        _version: '1' # устанавливаем обязательную версию


# Routing который формирует запрос для поиска пользователя
# в определенном городе
# пример запроса /api/search/v1/json/users/city/{cityId}
RPSearchBundle_search_users_bycity:
    path: /v{_version}/{_format}/users/city/{cityId}
    defaults:
        _controller: RPSearchBundle:SearchUsers:searchUsersByCity
        _version: 1
        _format: json
        template: "RPSearchBundle:SearchUsers:searchusersCity.html.twig" # обязательный параметр при передаче в формате HTML (frontend parts API)
    requirements:
        _method: (GET)
        _format: (json|xml|html|plist)
        _version: '1' # устанавливаем обязательную версию
        cityId: \w+


# Routing который формирует запрос для поиска людей по друзьям
# по имени/фамилии пользователя (начало/середина имени/фамилии)
# пример запроса /api/search/v1/json/users/friend
RPSearchBundle_search_users_byfriend:
    path: /v{_version}/{_format}/users/friend
    defaults:
        _controller: RPSearchBundle:SearchUsers:searchUsersByFriend
        _version: 1
        _format: json
        template: "RPSearchBundle:SearchUsers:searchusersFriend.html.twig" # обязательный параметр при передаче в формате HTML (frontend parts API)
    requirements:
        _method: (GET)
        _format: (json|xml|html|plist)
        _version: '1' # устанавливаем обязательную версию

# Routing который формирует запрос для поиска человека по ID
# пример запроса /api/search/v1/json/users/helpoffers
RPSearchBundle_search_users_byhelpoffers:
    path: /v{_version}/{_format}/users/helpoffers
    defaults:
        _controller: RPSearchBundle:SearchUsers:searchUsersHelpOffers
        _version: 1
        _format: json
        template: "RPSearchBundle:SearchUsers:searchusersHelpOffers.html.twig" # обязательный параметр при передаче в формате HTML (frontend parts API)
    requirements:
        _method: (GET)
        _format: (json|xml|html|plist)
        _version: '1' # устанавливаем обязательную версию

# Routing который формирует запрос для поиска
# предпологаемых дрезей по совпадению интересов
# пример запроса /api/search/v1/json/users/helpoffers
RPSearchBundle_search_users_byinterests:
    path: /v{_version}/{_format}/users/interests/{userId}
    defaults:
        _controller: RPSearchBundle:SearchUsers:searchPossibleFriends
        _version: 1
        _format: json
        template: "RPSearchBundle:SearchUsers:searchPossibleFriends.html.twig" # обязательный параметр при передаче в формате HTML (frontend parts API)
    requirements:
        _method: (GET)
        _format: (json|xml|html|plist)
        _version: '1' # устанавливаем обязательную версию
        userId: \w+

# Routing который формирует запрос для поиска человека по ID
# пример запроса /api/search/v1/json/users/id/10357
RPSearchBundle_search_users_byid:
    path: /v{_version}/{_format}/users/id/{userId}
    defaults:
        _controller: RPSearchBundle:SearchUsers:searchUsersById
        _version: 1
        _format: json
        template: "RPSearchBundle:SearchUsers:searchusersById.html.twig" # обязательный параметр при передаче в формате HTML (frontend parts API)
    requirements:
        _method: (OPTIONS|GET)
        _format: (json|xml|html|plist)
        _version: '1' # устанавливаем обязательную версию
        userId: \w+